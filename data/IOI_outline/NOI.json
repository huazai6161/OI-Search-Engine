{
  "全国青少年信息学奥林匹克竞赛大纲": {
    "简介": {
      "目的": [
        "为NOI系列竞赛提供命题依据",
        "指导NOI教师的教学方向",
        "明确NOI选手学习范围",
        "供省市NOI选拔活动参考"
      ],
      "原则": {
        "等级化原则": "分为入门级、提高级、NOI级",
        "差异化原则": "低级别知识点细化，高级别知识点概括",
        "统一性原则": "高等级自动包含低等级内容"
      },
      "建议": [
        "竞赛考察范围不超大纲级别",
        "避免考察算法复杂度的常系数",
        "重点考察经典算法，避免冷门算法"
      ]
    },
    "竞赛大纲": {
      "入门级": {
        "基础知识与编程环境": [
          "计算机基础（CPU、内存、I/O）",
          "操作系统基础（Windows、Linux）",
          "计算机网络、NOI竞赛规则",
          "C++开发环境（Dev C++、Code::Blocks）",
          "基本编译器（g++、gcc）"
        ],
        "C++程序设计": {
          "基础概念": ["标识符", "关键字", "变量", "表达式"],
          "数据类型": ["int", "float", "char", "bool"],
          "基本语句": ["if", "switch", "for", "while", "do-while"],
          "运算": ["算术运算", "关系运算", "逻辑运算", "位运算"],
          "STL": ["min", "max", "swap", "sort", "stack", "queue", "vector"],
          "字符串": ["字符数组", "string类"],
          "函数与递归": ["传值", "传引用", "递归"],
          "指针": ["指针变量", "数组指针", "结构体指针"]
        },
        "数据结构": {
          "线性结构": ["数组", "链表", "栈", "队列"],
          "树": ["二叉树", "完全二叉树", "哈夫曼树", "二叉搜索树"],
          "图": ["邻接矩阵", "邻接表"]
        },
        "算法": {
          "基础算法": ["贪心", "递推", "递归", "二分", "倍增"],
          "搜索": ["DFS", "BFS"],
          "排序": ["冒泡", "选择", "插入", "计数"],
          "图算法": ["深度优先遍历", "广度优先遍历", "最短路径"],
          "动态规划": ["一维DP", "背包问题", "区间DP"]
        },
        "数学基础": {
          "数论": ["整除", "因数", "质数", "欧几里得算法"],
          "离散数学": ["集合", "排列", "组合", "杨辉三角"],
          "进制转换": ["二进制", "十进制", "十六进制"],
          "数学库": ["sqrt", "abs", "log", "sin", "cos", "exp"]
        }
      },
      "提高级": {
        "编程环境": ["Linux终端操作", "g++编译选项", "GDB调试"],
        "C++进阶": {
          "类与面向对象": ["class", "运算符重载"],
          "STL容器": ["set", "multiset", "deque", "priority_queue", "map"],
          "智能指针": ["unique_ptr", "shared_ptr"]
        },
        "数据结构": {
          "高级线性结构": ["单调栈", "单调队列", "ST表"],
          "特殊树": ["并查集", "树状数组", "线段树", "字典树"],
          "图结构": ["二分图", "欧拉图", "DAG", "强连通图"],
          "哈希": ["数值哈希", "字符串哈希"]
        },
        "算法": {
          "排序": ["归并", "快速", "堆排序"],
          "字符串匹配": ["KMP算法"],
          "搜索优化": ["剪枝优化", "启发式搜索"],
          "图论": ["最小生成树", "单源最短路径", "拓扑排序", "割点"],
          "动态规划": ["树形DP", "状态压缩DP", "DP优化"]
        },
        "数学": {
          "数论": ["欧拉定理", "费马小定理", "中国剩余定理"],
          "组合数学": ["鸽巢原理", "二项式定理", "容斥原理", "Catalan数"],
          "线性代数": ["矩阵运算", "高斯消元"]
        }
      },
      "NOI级": {
        "C++高级": ["面向对象（OOP）"],
        "数据结构": {
          "复杂数据结构": ["块状链表", "跳跃表"],
          "复杂树": ["树链剖分", "LCT", "k-d树", "虚树"],
          "可合并堆": ["左偏树", "二项堆"],
          "可持久化数据结构": ["可持久化线段树"]
        },
        "算法": {
          "高级策略": ["分块", "离线处理", "平衡规划"],
          "字符串算法": ["后缀数组", "后缀树", "AC自动机"],
          "图论算法": ["网络流", "二分图匹配", "最小树形图"],
          "动态规划": ["复杂DP模型"]
        },
        "数学": {
          "数论": ["原根", "大步小步算法", "Dirichlet卷积"],
          "组合数学": ["群论", "母函数", "莫比乌斯反演"],
          "线性代数": ["逆矩阵", "行列式"],
          "高等数学": ["Taylor级数", "FFT"],
          "概率论": ["贝叶斯定理", "条件概率"],
          "博弈论": ["Nim博弈", "SG函数"],
          "优化算法": ["单纯形法"],
          "计算几何": ["凸包", "半平面交"],
          "信息论": ["熵", "互信息"],
          "计算复杂度": ["信息复杂度", "描述复杂度"]
        }
      }
    },
    "总结": {
      "知识体系": {
        "入门级": "基本C++语法、简单数据结构和算法",
        "提高级": "高级数据结构、优化算法、数学理论",
        "NOI级": "高阶数据结构、计算几何、概率、博弈论"
      },
      "适用范围": [
        "信息学奥赛（NOI）选手",
        "算法竞赛（USACO, Codeforces, AtCoder）"
      ]
    }
  }
}